cache:
  directories:
    - $HOME/.m2
env:
  global:
  - secure: fIpwqTk0CaukDz2gGEW8R7Pwa+dLPuPA5hcDm5d5vuqNH2FA02oX09fUrqZWPBlM79ve6UmRTt0TNM2kKCMuZQB175dY/CCPHO22aOw+uMP7ywFkq2FIK8+1qvkTUwWmNsA+sHTMrdmNBM4unguwBq8v3627dik8FAOAkqVWtUI=
  - secure: IaL7OXZlR7H/9CiAXik2i8sj83EflxBHhGncamJ4DmyzanXHB4djE65skBLueLe5uZTI2uEVDkasYSfeUUQoEXkawHW4P17yiDG23i+oBJGORUH4RUY0U/cWRKC6mb1ESKYmMBahuHXxg9NuwsaMQWYti+KILUh5xaHDZVedCCg=
  - secure: kUYIHVHjuB5GIym8Wv1B32zn6rcTZ+ZPX3Wfu4zZ+OuTWMv3/hCJpsV0IexmTbb/1erpO+r3MrKuwbzSmfMI1Bm7AF1ZrihjnSgR7a7Diae72zFRIGzDFoHAxQT6+8uvPDJsz/3Cj1tS+3IGQCo38SwxFnp3xFKSt6yDtIN3XJU=
  - secure: u1H7J1NyT2RLDzo9M2A8rCEc9YAw/pg4j6uPimC9d85vIpcDDwN6FpZ8NbOEPKdy0M3uComObWv7b00FQvEB2d7WdRlRRIjlbSqwtiQQj0JjOWyrPdxUQvNt2Hp1G3du5o/beqJ7f8EuC0ZsSlSnI606nf7iqKHV8EqlCFJsu9g=
  - secure: "v4qXQHOrOpICepoymxFa2JbEPy1PVoqSexX+Z8Z+G8i21XkRIAieIhSHCChJxkAERb3NE2VjYeGXBy5z5TlfVqA/VJgdKlCgtH5YahjT58BJ8ZAlvmAPgm1j6T9b5tvj6r+NLXAIADSwOdQQWWCOhjEZaOjsWfXqh3Cz7TELfEw="
  - secure: "eBGGglS+62RDvBESTBjqDM67wUBI7Dp7ZCo4yQqyDOwW1mLXxJuIx14Hzd1/tu2akd5FujJwy3O1KC1yZNXjI8GSoIkZEUJT+wIZcn7ue80lTkZqSJO/4+tRg3dmvVVkjbiTA0LgosuSD7M55VitqPlFVMBtYsgdENBozEagUWQ="
  #Coverity
  - secure: "hQp8o1ihvUxHps9CyohAncDYImybrkkeg//1UY+bn8pFIgbQDr7Pfu/osUiNfa5B+l7NZXzw4TqK+2lFFs2/aXpV1vMNOmY7e9awY2qSRhrUDMj/9ReJm+tL2HsIev6ZH1oS8hMEOYeUa3+qC7vOQhBn9GtHXIgSdqU8EHxJTdU="
before_install:
- openssl aes-256-cbc -K $encrypted_e836d0488b25_key -iv $encrypted_e836d0488b25_iv
  -in etc/gpg.enc -out etc/gpg -d
- gpg --import etc/gpg
- git config --global user.name "Build Bot"
- git config --global user.email "buildbot@btrplace.org"
- export MAVEN_OPTS=-Xmx512m
install:
- true
jdk:
- openjdk8
language: java
os: linux
notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/08e84639ce79857bcff2
    on_success: always  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
stages:
  - compile and test
  - deploy sonatype
     # We deploy to sonatype snapshot releases (in master branch) or on tags.
    if: branch = master OR tag IS present
  - deploy github release
     # We declare the release iff this is a tag.
    if: tag IS present
jobs:
  include:
      # We always compile and test
      - stage: compile and test
        script: mvn compile test
        after_success:
          - bash <(curl -s https://codecov.io/bash)
      - stage: deploy sonatype
        deploy:
          provider: script
          script: bash bin/deploy.sh
          on:
            tags: true
      - stage: deploy github release
        script: ./bin/changelog.py log $(./bin/version.py) > release_notes.txt
        deploy:
          provider: releases
          token: ${GH_TOKEN}
          release_notes_file: release_notes.txt
          draft: false
